{"name": "测试用户名为空的场景", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '../test_excel_data03/cases.xlsx'", "trace": "self = <autotest.testcases.test_my_interface01.test_login.TestLogin object at 0x00000272FC56D5C0>\ncase = <comms.excel_utils.CaseData object at 0x00000272FBCD6588>\n\n    @allure.severity(\"critical\")  # 为allure报告修改case优先级\n    @allure.description(\"京东小程序入口登入接口\")  # 为allure报告添加case描述\n    @pytest.mark.parametrize(\"case\", cases)  # 把返回的列表中的成员赋值给case，每赋值一次执行一次case\n    def test_login(self, case):  # 接受case测试用例对象参数\n        allure.dynamic.title(case.case_title)  # 动态获取allure报告的case标题\n        allure.attach(body=case.url, name='接口路径')  # allure报告显示接口路劲\n        allure.attach(body=case.case_data, name='接口参数')  # allure报告显示接口参数\n    \n        if case.case_id == 1:\n            uname = eval(case.case_data)[\"username\"]\n            pwd = eval(case.case_data)[\"password\"]\n            db = DBUtils()\n            db.cud(\"delete from tb_user where name = %s;\", (uname,))\n            db.cud(\"insert into tb_user(name,passwd,email,phone) values(%s,%s,%s,%s);\",\n                   (uname, pwd, 'test@163.com', '19943789999'))\n            db.close()\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))  # 发起post请求，url和请求体是对像的2个实例属性\n        res = response.json()  # 把响应体转换为jsio格式\n    \n        allure.attach(body=str(res), name='响应结果')  # allure报告显示响应结果\n    \n        try:\n            assert eval(case.expect) == res  # 断言测试用例的预期结果和实际结果是否一致\n        except AssertionError as e:\n            ReadExcel.write_data(r'../test_excel_data03/cases.xlsx', 'user_login', case.case_id, 7,\n                                 '失败')  # 如果断言失败把结果写入excel\n            logger.error(\"测试编号{},测试用例标题{},执行失败！实际结果是:{}\".format(case.case_id, case.case_title, res))\n            logger.exception(e)\n            raise e\n        else:\n            logger.error(\"测试编号{},测试用例标题{},执行成功！\".format(case.case_id, case.case_title))\n            ReadExcel.write_data(r'../test_excel_data03/cases.xlsx', 'user_login', case.case_id, 7,\n>                                '成功')  # 如果实际结果和预期结果一致就把‘成功’写入excel\n\ntest_login.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\comms\\excel_utils.py:81: in write_data\n    wb = openpyxl.load_workbook(file_name)  # 读取工作簿\nD:\\Tools\\python\\lib\\site-packages\\openpyxl\\reader\\excel.py:316: in load_workbook\n    data_only, keep_links)\nD:\\Tools\\python\\lib\\site-packages\\openpyxl\\reader\\excel.py:124: in __init__\n    self.archive = _validate_archive(fn)\nD:\\Tools\\python\\lib\\site-packages\\openpyxl\\reader\\excel.py:96: in _validate_archive\n    archive = ZipFile(filename, 'r')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>, file = '../test_excel_data03/cases.xlsx'\nmode = 'r', compression = 0, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   FileNotFoundError: [Errno 2] No such file or directory: '../test_excel_data03/cases.xlsx'\n\nD:\\Tools\\python\\lib\\zipfile.py:1182: FileNotFoundError"}, "description": "京东小程序入口登入接口", "attachments": [{"name": "接口路径", "source": "409a5855-286c-4fc9-9910-30058b687010-attachment.attach"}, {"name": "接口参数", "source": "792fc158-0def-4924-bc7a-76b07850749f-attachment.attach"}, {"name": "响应结果", "source": "85a28e31-296e-4147-9ed8-d95a33bfa557-attachment.attach"}, {"name": "log", "source": "84dab41c-25e8-40cc-bb96-cb7bb65617d5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "<comms.excel_utils.CaseData object at 0x00000272FBCD6588>"}], "start": 1646198019536, "stop": 1646198019543, "uuid": "f7403bfe-488a-43eb-8b67-31aa4744b981", "historyId": "1bb55d4815038396707b989bca08a201", "testCaseId": "0b8f0d09c6a8e415d602bd18ededaf2e", "fullName": "testcases.test_my_interface01.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "登入模块"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "testcases.test_my_interface01"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-364LE5K"}, {"name": "thread", "value": "6484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_my_interface01.test_login"}]}